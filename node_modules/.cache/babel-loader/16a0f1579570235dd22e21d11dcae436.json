{"ast":null,"code":"var _jsxFileName = \"F:\\\\react\\\\facebook\\\\facebook\\\\src\\\\Pages\\\\Gamming.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Gamming() {\n  _s();\n\n  var [usersdata, setUserdata] = useState([]); //    console.log(usersdata)\n\n  function fetchData() {\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(response => {\n      setUserdata(response.data);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n    effect;\n    return () => {\n      cleanup;\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"game page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this), usersdata.map(username => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '15vh',\n        width: '60vw',\n        backgroundColor: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\" \", username.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", username.name, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 41\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Gamming, \"6Nw9J499pv+JG/BkX9Jxerpiheg=\");\n\n_c = Gamming;\nexport default Gamming;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gamming\");","map":{"version":3,"sources":["F:/react/facebook/facebook/src/Pages/Gamming.jsx"],"names":["React","useState","useEffect","axios","Gamming","usersdata","setUserdata","fetchData","get","then","response","data","catch","error","console","log","effect","cleanup","map","username","height","width","backgroundColor","email","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEhB,MAAI,CAACC,SAAD,EAAYC,WAAZ,IAA2BL,QAAQ,CAAC,EAAD,CAAvC,CAFgB,CAGnB;;AACG,WAASM,SAAT,GAAoB;AAChBJ,IAAAA,KAAK,CAACK,GAAN,CAAU,4CAAV,EACCC,IADD,CACMC,QAAQ,IAAE;AAACJ,MAAAA,WAAW,CAACI,QAAQ,CAACC,IAAV,CAAX;AAA2B,KAD5C,EAECC,KAFD,CAEOC,KAAK,IAAE;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAAmB,KAFlC;AAGH;;AAEFX,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,MAAM;AACN,WAAO,MAAM;AACTC,MAAAA,OAAO;AACV,KAFD;AAGH,GALQ,CAAT;AAOE,sBACI;AAAA,4BACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADH,EAGKZ,SAAS,CAACa,GAAV,CAAeC,QAAD,iBAAa;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAC,MAAR;AAAeC,QAAAA,KAAK,EAAC,MAArB;AAA4BC,QAAAA,eAAe,EAAC;AAA5C,OAAZ;AAAA,8BACxB;AAAA,wBAAMH,QAAQ,CAACI,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADwB,eAExB;AAAA,wBAAMJ,QAAQ,CAACK,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFwB;AAAA;AAAA;AAAA;AAAA;AAAA,YAA3B,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA3BQpB,O;;KAAAA,O;AA6BT,eAAeA,OAAf","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction Gamming() {\r\n    \r\n   var [usersdata, setUserdata] = useState([]) \r\n//    console.log(usersdata)\r\n   function fetchData(){\r\n       axios.get(\"https://jsonplaceholder.typicode.com/users\")\r\n       .then(response=>{setUserdata(response.data)})\r\n       .catch(error=>{console.log(error)})\r\n   }\r\n\r\n  useEffect(() => {\r\n      effect\r\n      return () => {\r\n          cleanup\r\n      }\r\n  })\r\n\r\n    return (\r\n        <div>\r\n           <h1>game page</h1>\r\n           \r\n            {usersdata.map((username)=> <div style={{height:'15vh',width:'60vw',backgroundColor:'red'}}>\r\n                <h2> {username.email} </h2>\r\n                <h4> {username.name} </h4>\r\n                </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gamming\r\n"]},"metadata":{},"sourceType":"module"}